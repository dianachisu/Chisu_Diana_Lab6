<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Chisu_Diana_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Chisu_Diana_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryOrdersViewSource" Source="{Binding Orders,Source={StaticResource inventoryViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                     Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    <Grid>
        <TabControl HorizontalAlignment="Left" Height="382" VerticalAlignment="Top" Width="718" Margin="40,27,0,0">
            <TabItem Header="Customer">
                <Grid Background="#FFE5E5E5" Margin="0,-1,-1,-10" DataContext="{StaticResource customerViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="88*"/>
                        <ColumnDefinition Width="15*"/>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="602*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="83,10,120,206" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="83,200,0,0" VerticalAlignment="Top" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="47"/>
                            <ColumnDefinition Width="57"/>
                            <ColumnDefinition Width="22"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="3" IsEnabled="False">
                            <TextBox.RenderTransform>
                                <MatrixTransform Matrix="Identity"/>
                            </TextBox.RenderTransform>
                        </TextBox>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="3"
                         Validation.ErrorTemplate="{StaticResource validationTemplate}"
                         Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="3"
                         Validation.ErrorTemplate="{StaticResource validationTemplate}"
                         Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Margin="38,38,0,0" Click="btnNew_Click" Grid.ColumnSpan="4"/>
                    <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="38,73,0,0" Click="btnEdit_Click" Grid.ColumnSpan="4"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="38,110,0,0" Click="btnDelete_Click" Grid.ColumnSpan="4"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="38,224,0,0" Click="btnSave_Click" Grid.ColumnSpan="4" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding
                                ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />

                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="38,260,0,0" Click="btnCancel_Click" Grid.ColumnSpan="4"/>
                    <Button x:Name="btnPrevious" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Margin="83,164,0,0" Click="btnPrevious_Click" Grid.Column="3"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="76" Margin="407,164,0,0" Click="btnNext_Click" Grid.Column="3"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory" RenderTransformOrigin="0.5,0.5">
                <TabItem.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0.183"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TabItem.RenderTransform>
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="21*"/>
                        <ColumnDefinition Width="692*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="215,10,80,214" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" Grid.Column="1" HorizontalAlignment="Left" Margin="215,181,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnNext1" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Grid.Column="1" Margin="536,151,0,0" Click="btnNext1_Click"/>
                    <Button x:Name="btnPrevious1" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Grid.Column="1" Margin="215,151,0,0" Click="btnPrevious1_Click"/>
                    <Button x:Name="btnCancel1" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Grid.Column="1" Margin="39,238,0,0"/>
                    <Button x:Name="btnSave1" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Grid.Column="1" Margin="39,198,0,0"/>
                    <Button x:Name="btnDelete1" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Grid.Column="1" Margin="39,96,0,0"/>
                    <Button x:Name="btnEdit1" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Grid.Column="1" Margin="39,59,0,0"/>
                    <Button x:Name="btnNew1" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Grid.Column="1" Margin="39,22,0,0"/>
                </Grid>
            </TabItem>
            <TabItem Header="Order">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryOrdersViewSource}" Margin="10,0,-10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75*"/>
                        <ColumnDefinition Width="281*"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="lblCustomers" Content="Customers" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3,60,0,0" FontWeight="Bold" Width="77" Grid.Column="1" Height="26"/>

                    <ComboBox x:Name="cmbCustomers" Margin="3,91,454,241"  Grid.Column="1" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="292,91,0,0" Grid.Column="1" Height="22" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label x:Name="lblInventory" Content="Inventory" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="294,60,0,0" FontWeight="Bold" Grid.Column="1" Height="26" Width="66"/>
                    <Button x:Name="btnCancelO" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="33,252,0,0"/>
                    <Button x:Name="btnSaveO" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="33,208,0,0" Click="btnSaveO_Click"/>
                    <Button x:Name="btnDeleteO" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="33,113,0,0"/>
                    <Button x:Name="btnEditO" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="33,78,0,0"/>
                    <Button x:Name="btnNewO" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="33,44,0,0"/>
                    <Button x:Name="btnNextO" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Grid.Column="1" Margin="337,292,0,0" Click="btnNextO_Click"/>
                    <Button x:Name="btnPreviousO" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Grid.Column="1" Margin="3,292,0,0" Click="btnPreviousO_Click"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" Grid.Column="1" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource inventoryOrdersViewSource}}" Margin="3,118,150,82" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn1" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="custIdColumn1" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="orderIdColumn" Binding="{Binding OrderId}" Header="Order Id" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
